datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
    output = "./generated/client"
}

model User {
    id        String      @id @default(auto()) @map("_id") @db.ObjectId
    firstName String
    lastName  String?
    phone     String?
    email     String      @unique
    role      UserRole    @default(STUDENT) // Default role is "STUDENT"
    // firebaseUid String?     @unique
    profile   Profile[]   @relation("userPro")
    education Education[] @relation("Teacher")
    address   Address[]   @relation("userAdd")
    createdAt DateTime    @default(now())
    updatedAt DateTime    @updatedAt
}

enum UserRole {
    ADMIN
    STUDENT
    TEACHER
}

model Profile {
    id        String  @id @default(auto()) @map("_id") @db.ObjectId
    bio       String?
    avatarUrl String?
    user      User?   @relation("userPro", fields: [userId], references: [id])
    userId    String? @db.ObjectId
}

model Education {
    id             String   @id @default(auto()) @map("_id") @db.ObjectId
    degreeName     String
    groupMajor     String
    boardInstitute String
    country        String
    passingYear    String
    user           User     @relation("Teacher", fields: [userId], references: [id])
    userId         String   @db.ObjectId
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
}

model Address {
    id      String @id @default(auto()) @map("_id") @db.ObjectId
    street  String
    city    String
    state   String
    country String
    pinCode String
    user    User   @relation("userAdd", fields: [userId], references: [id])
    userId  String @db.ObjectId
}

model Course {
    id             String   @id @default(auto()) @map("_id") @db.ObjectId
    name           String
    value          String?
    curriculumCode String?  @default("15")
    subjectCode    String
    overview       String?
    lab            String?
    imageUrl       String?
    status         Boolean
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
}

model Notice {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    title     String
    pdfUrl    String
    status    Boolean
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Admission {
    id               String @id @default(auto()) @map("_id") @db.ObjectId
    nameEN           String
    nameBN           String
    tech             String
    semister         String
    studentType      String
    birthDayDate     String
    birthPlace       String
    blood            String
    nationality      String
    religion         String
    maritalStatus    String
    parentPhone      String
    studentPhone     String
    gender           String
    email            String
    emergencyContact String
    sourceOfCost     String

    presentAddress   Json
    permanentAddress Json

    fatherInfo Json
    motherInfo Json
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
}
